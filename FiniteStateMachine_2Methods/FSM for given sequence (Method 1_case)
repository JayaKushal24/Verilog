module Method1(
 input clk,
 input rst,
 input x,
 output reg [3:0] y
);

//2BEC063

 reg [2:0] state, nstate;
 parameter S0 = 4'b0010; // 2
 parameter S1 = 4'b1011; // B
 parameter S2 = 4'b1110; // E
 parameter S3 = 4'b1100; // C
 parameter S4 = 4'b0000; // 0
 parameter S5 = 4'b0110; // 6
 parameter S6 = 4'b0011; // 3
 always @(posedge clk) begin
 if (rst)
 state <= 3'b000;
 else
 state <= nstate;
 end
 always @(*) begin
 case (state)
 3'b000: nstate = x ? 3'b001 : 3'b110;
 3'b001: nstate = x ? 3'b010 : 3'b000;
 3'b010: nstate = x ? 3'b011 : 3'b001;
 3'b011: nstate = x ? 3'b100 : 3'b010;
 3'b100: nstate = x ? 3'b101 : 3'b011;
 3'b101: nstate = x ? 3'b110 : 3'b100;
 3'b110: nstate = x ? 3'b000 : 3'b101;
 default: nstate = 3'b000;
 endcase
 end
 always @(*) begin
 case (state)
 3'b000: y = S0;
 3'b001: y = S1;
 3'b010: y = S2;
 3'b011: y = S3;
 3'b100: y = S4;
 3'b101: y = S5;
 3'b110: y = S6;
 default: y = 4'b0000;
 endcase
 end
endmodule
